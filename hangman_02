using System;
using System.Collections.Generic;
using System.Text;
using System.Timers;

namespace HangmanAppTest
{
    internal class Program
    {
        private static Timer gameTimer;
        private static int timeLeft;
        private static bool timeUp;
        private static int gamesWon = 0;
        private static int gamesLost = 0;

        private static void PrintHangman(int wrong)
        {
            string[] stages = {
                "\n+---+\n    |\n    |\n    |\n   ===",
                "\n+---+\nO   |\n    |\n    |\n   ===",
                "\n+---+\nO   |\n|   |\n    |\n   ===",
                "\n+---+\n O  |\n/|  |\n    |\n   ===",
                "\n+---+\n O  |\n/|\\ |\n    |\n   ===",
                "\n+---+\n O  |\n/|\\ |\n/   |\n   ===",
                "\n+---+\n O  |\n/|\\ |\n/ \\ |\n   ==="
            };
            Console.WriteLine(stages[Math.Min(wrong, stages.Length - 1)]);
        }

        private static int PrintWord(List<char> guessedLetters, string randomWord)
        {
            int correctLetters = 0;
            Console.Write("\nWort: ");
            foreach (char c in randomWord)
            {
                if (guessedLetters.Contains(c))
                {
                    Console.Write(c + " ");
                    correctLetters++;
                }
                else
                {
                    Console.Write("_ ");
                }
            }
            Console.WriteLine();
            return correctLetters;
        }

        private static void StartTimer(int duration)
        {
            timeLeft = duration;
            timeUp = false;
            gameTimer = new Timer(1000);
            gameTimer.Elapsed += (sender, e) =>
            {
                if (timeLeft > 0)
                {
                    timeLeft--;
                }
                else
                {
                    timeUp = true;
                    gameTimer.Stop();
                    Console.WriteLine("\n‚è≥ Zeit ist abgelaufen!");
                }
            };
            gameTimer.Start();
        }

        static void Main()
        {
            Console.OutputEncoding = Encoding.UTF8;
            Console.WriteLine("Willkommen bei Hangman!");
            Console.WriteLine("-----------------------------------------");

            do
            {
                Console.WriteLine("W√§hle eine Option: \n1 - Play \n2 - Komplexit√§t");
                string choice = Console.ReadLine()?.Trim();
                while (choice != "1" && choice != "2")
                {
                    Console.WriteLine("Ung√ºltige Auswahl. W√§hle 1 f√ºr Play oder 2 f√ºr Komplexit√§t.");
                    choice = Console.ReadLine()?.Trim();
                }

                Dictionary<string, string[]> categories = new Dictionary<string, string[]>
                {
                    { "1", new string[] { "tiger", "giraffe", "delfin", "elefant", "pinguin", "wolf", "b√§r", "zebra", "giraffe", "schildkr√∂te", "k√§nguru", "leoparden", "adler", "papagei", "drache" } },
                    { "2", new string[] { "basketball", "tennis", "volleyball", "fu√üball", "schwimmen", "tennis", "handball", "rugby", "golf", "eishockey", "gymnastik", "klettern", "reiten", "skateboarding" } },
                    { "3", new string[] { "pizza", "banane", "schokolade", "k√§se", "brot" , "hamburger", "kekse", "sushi", "lasagne", "salat", "k√§se", "pommes", "spaghetti", "donuts", "kuchen" } },
                    { "4", new string[] { "deutschland", "frankreich", "italien", "spanien", "√∂sterreich" , "kanada", "brasilien", "indien", "australien", "norwegen", "schottland", "usa", "japan"} },
                    { "5", new string[] { "auto", "flugzeug", "schiff", "fahrrad", "zug",  "motorrad", "bus", "schiff", "roller", "fahrrad", "u-bahn", "tram", "jeep", "limousine", "truck"} },
                    { "6", new string[] { "gitarre", "klavier", "schlagzeug", "geige", "trompete",  "trompete", "violine", "saxophon", "fl√∂te", "trommel", "cello", "keyboard", "harfe", "akkordeon", "marimba" } }
                };

                Console.WriteLine("W√§hle eine Kategorie: \n1 - Tiere \n2 - Sport \n3 - Essen \n4 - L√§nder \n5 - Fahrzeuge \n6 - Musikinstrumente");
                string category = Console.ReadLine()?.Trim();
                while (!categories.ContainsKey(category))
                {
                    Console.WriteLine("Ung√ºltige Kategorie. W√§hle 1, 2, 3, 4, 5 oder 6.");
                    category = Console.ReadLine()?.Trim();
                }

                string[] wordList = categories[category];
                Random random = new Random();
                string randomWord = wordList[random.Next(wordList.Length)];

                int wrongGuesses = 0;
                List<char> guessedLetters = new List<char>();
                int correctLetters = 0;

                int timerDuration = (choice == "1") ? 0 : (choice == "2") ? 180 : 0;
                if (timerDuration > 0) StartTimer(timerDuration);

                while (wrongGuesses < 6 && correctLetters < randomWord.Length && !timeUp)
                {
                    Console.WriteLine($"\n‚è≥ Verbleibende Zeit: {timeLeft} Sekunden");
                    PrintHangman(wrongGuesses);
                    correctLetters = PrintWord(guessedLetters, randomWord);

                    Console.Write("\nRate einen Buchstaben: ");
                    string input = Console.ReadLine()?.ToLower();

                    if (string.IsNullOrEmpty(input))
                    {
                        Console.WriteLine("Bitte gib einen Buchstaben ein!");
                        continue;
                    }

                    char letterGuessed = input[0];

                    if (guessedLetters.Contains(letterGuessed))
                    {
                        Console.WriteLine("Diesen Buchstaben hast du schon geraten.");
                        continue;
                    }

                    guessedLetters.Add(letterGuessed);

                    if (randomWord.Contains(letterGuessed))
                    {
                        correctLetters = PrintWord(guessedLetters, randomWord);
                    }
                    else
                    {
                        wrongGuesses++;
                    }
                }

                gameTimer?.Stop();
                PrintHangman(wrongGuesses);

                if (correctLetters == randomWord.Length)
                {
                    Console.WriteLine("\nüéâ Gl√ºckwunsch! Du hast das Wort erraten!");
                    gamesWon++;
                }
                else
                {
                    Console.WriteLine($"\n‚ùå Game Over! Das Wort war: {randomWord}");
                    gamesLost++;
                }

                Console.WriteLine($"\nüèÜ Dein Rekord: {gamesWon} gewonnene Spiele, {gamesLost} verlorene Spiele");
                Console.WriteLine("M√∂chtest du noch eine Runde spielen? (ja/nein)");
            }
            while (Console.ReadLine().Trim().ToLower() == "ja");

            Console.WriteLine("\nDanke f√ºrs Spielen! üëã");
        }
    }
}
